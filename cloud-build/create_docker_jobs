#!/usr/bin/env ruby

ENV['BUNDLE_GEMFILE'] = File.expand_path('Gemfile', __dir__)
require 'bundler'
Bundler.require(:default)

require 'kubernetes'
require 'active_support/core_ext/hash/keys'
require 'active_support/core_ext/string/inflections'
require 'yaml'

current_release = 25
first_release = current_release - 2

def config
  {
    prefix: 'cloud-controller-build',
    image: 'gcr.io/kaniko-project/executor:latest',
    requestsCpu: '1',
    requestsMemory: '2Gi',
    requestsEphemeral: '5Gi',
    limitsCpu: '2',
    limitsMemory: '3Gi',
    limitsEphemeral: '7Gi',
    gitRepo: 'git://github.com/brightbox/brightbox-cloud-controller-manager.git',
    dockerTarget: 'brightbox/brightbox-cloud-controller-manager',
    secretName: 'regcred',
    holdTime: 600
  }
end

def create_job_manifest(release, config, version, name)
  Kubernetes::IoK8sApiBatchV1Job.new(
    api_version: 'batch/v1',
    kind: 'Job',
    metadata: Kubernetes::IoK8sApimachineryPkgApisMetaV1ObjectMeta.new(
      name: name,
      labels: { build: config[:prefix] }
    ),
    spec: Kubernetes::IoK8sApiBatchV1JobSpec.new(
      ttl_seconds_after_finished: config[:holdTime],
      template: Kubernetes::IoK8sApiCoreV1PodTemplateSpec.new(
        spec: Kubernetes::IoK8sApiCoreV1PodSpec.new(
          restart_policy: 'Never',
          containers: [
            Kubernetes::IoK8sApiCoreV1Container.new(
              name: name,
              image: config[:image],
              resources: Kubernetes::IoK8sApiCoreV1ResourceRequirements.new(
                requests: {
                  memory: config[:requestsMemory],
                  cpu: config[:requestsCpu],
                  'ephemeral-storage' => config[:requestsEphemeral]
                },
                limits: {
                  memory: config[:limitsMemory],
                  cpu: config[:limitsCpu],
                  'ephemeral-storage' => config[:limitsEphemeral]
                }
              ),
              args: [
                '--dockerfile=Dockerfile',
                "--context=#{config[:gitRepo]}#refs/heads/release-#{release}",
                "--destination=#{config[:dockerTarget]}:#{version}"
              ],
              volume_mounts: [
                Kubernetes::IoK8sApiCoreV1VolumeMount.new(
                  name: config[:secretName], mount_path: '/kaniko/.docker'
                )
              ]
            )
          ],
          volumes: [
            Kubernetes::IoK8sApiCoreV1Volume.new(
              name: config[:secretName],
              secret: Kubernetes::IoK8sApiCoreV1SecretVolumeSource.new(
                secret_name: config[:secretName],
                items: [
                  Kubernetes::IoK8sApiCoreV1KeyToPath.new(
                    key: '.dockerconfigjson', path: 'config.json'
                  )
                ]
              )
            )
          ]
        )
      )
    )
  )
end

def create_job(release, config)
  version = `git describe --always release-#{release}`
            .strip.sub(/^v([0-9]+\.[0-9]+\.[0-9]+).*$/, '\1')
  name = "#{config[:prefix]}-#{version.tr('.', '-')}"
  create_job_manifest(release, config, version, name)
    .to_hash.deep_stringify_keys.to_yaml
end

jobs = (first_release..current_release).inject('') do |memo, release|
  memo << create_job("1.#{release}", config)
end

puts jobs

# require 'open3'
# stdout_str, status = Open3.capture2('kubectl apply -f -', stdin_data: jobs)
# puts stdout_str
# exit status.exitstatus
